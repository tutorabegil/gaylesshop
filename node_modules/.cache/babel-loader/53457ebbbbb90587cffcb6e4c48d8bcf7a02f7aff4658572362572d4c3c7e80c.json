{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main\"\n};\nconst _hoisted_2 = {\n  class: \"app-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductList = _resolveComponent(\"ProductList\");\n  const _component_ShoppingCart = _resolveComponent(\"ShoppingCart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_ProductList, {\n    onAddToCart: $options.addToCart\n  }, null, 8 /* PROPS */, [\"onAddToCart\"]), _createVNode(_component_ShoppingCart, {\n    cartItems: $data.cartItems,\n    onRemoveFromCart: $options.removeFromCart\n  }, null, 8 /* PROPS */, [\"cartItems\", \"onRemoveFromCart\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_ProductList","onAddToCart","$options","addToCart","_component_ShoppingCart","cartItems","$data","onRemoveFromCart","removeFromCart"],"sources":["C:\\mytemplate\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <div class=\"app-container\">\n      <ProductList @add-to-cart=\"addToCart\"></ProductList>\n      <ShoppingCart :cartItems=\"cartItems\" @remove-from-cart=\"removeFromCart\"></ShoppingCart>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductList from './components/ProductList.vue';\nimport ShoppingCart from './components/ShoppingCart.vue';\n\nexport default {\n  components: {\n    ProductList,\n    ShoppingCart\n  },\n  data() {\n    return {\n      cartItems: []\n    };\n  },\n  methods: {\n    addToCart(product) {\n      const existingItem = this.cartItems.find(item => item.id === product.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        this.cartItems.push({ ...product, quantity: 1 });\n      }\n    },\n    removeFromCart(item) {\n      const index = this.cartItems.findIndex(cartItem => cartItem.id === item.id);\n      if (index !== -1) {\n        this.cartItems.splice(index, 1);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh; /* Ensure the main container covers the entire viewport height */\n}\n\n.app-container {\n  background-image: url('/img/img11.jpg');\n  background-size: cover; /* Cover the entire container */\n  height: 100%; /* Ensure the container covers the entire viewport height */\n  display: flex;\n}\n\n/* Add any other styling you need */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAe;;;;uBAD5BC,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAoDC,sBAAA;IAAtCC,WAAW,EAAEC,QAAA,CAAAC;EAAS,0CACpCJ,YAAA,CAAuFK,uBAAA;IAAxEC,SAAS,EAAEC,KAAA,CAAAD,SAAS;IAAGE,gBAAgB,EAAEL,QAAA,CAAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}